<?xml version="1.0" encoding="UTF-8"?>
<!--
     ModuleDescriptions Schema Version 1.3
     Creation time: 2006-12-05
     Author: Christian Schneider
-->
<!-- namespaces -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://nmedit.sf.net/ns/ModuleDescriptions" xmlns:m="http://nmedit.sf.net/ns/ModuleDescriptions">
  <!--
    Pair of attributes (type, value).
    'type' restricts the value to following types: xsd:boolean, xsd:float, xsd:double. xsd:integer, xsd:string.
    If the 'type' is 'string' then the 'type' attribute must not be specified.
    It is possible to use an type defined in the 'defs'-section.
  -->
  <xs:attributeGroup name="typedValue">
    <xs:attribute name="type" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="boolean"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="value" use="required" type="xs:boolean"/>
    <xs:attribute name="type" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="float"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="value" use="required" type="xs:float"/>
    <xs:attribute name="type" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="double"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="value" use="required" type="xs:double"/>
    <xs:attribute name="type" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="integer"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="value" use="required" type="xs:integer"/>
    <xs:attribute name="type">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="string"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="value" use="required"/>
  </xs:attributeGroup>
  <!-- Allows the definition of custom attributes and restrict their value to a specific type. -->
  <xs:element name="attribute">
    <xs:complexType>
      <xs:attribute name="id" type="xs:ID"/>
      <xs:attribute name="name" use="required"/>
      <xs:attributeGroup ref="m:typedValue"/>
    </xs:complexType>
  </xs:element>
  <!-- Element for comments -->
  <xs:element name="comment" type="xs:string"/>
  <!-- The connector element -->
  <xs:element name="connector">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="m:comment"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m:attribute"/>
      </xs:sequence>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="id" type="xs:ID"/>
      <xs:attribute name="key"/>
      <xs:attribute name="class"/>
      <xs:attribute name="type" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="input"/>
            <xs:enumeration value="output"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="signal" use="required"/>
    </xs:complexType>
  </xs:element>
  <!-- The parameter element -->
  <xs:element name="parameter">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="m:comment"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m:attribute"/>
      </xs:sequence>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="id" type="xs:ID"/>
      <xs:attribute name="key"/>
      <xs:attribute name="class"/>
      <xs:attribute name="minValue" default="0" type="xs:integer"/>
      <xs:attribute name="maxValue" default="127" type="xs:integer"/>
      <xs:attribute name="defaultValue" default="0" type="xs:integer"/>
      <xs:attribute name="format-id"/>
      <xs:attribute name="formatter"/>
    </xs:complexType>
  </xs:element>
  <!-- vendor description -->
  <xs:element name="vendor">
    <xs:complexType mixed="true">
      <xs:attribute name="url"/>
    </xs:complexType>
  </xs:element>
  <!-- the header element -->
  <xs:element name="header">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="m:vendor"/>
        <xs:element ref="m:device"/>
        <xs:element ref="m:property"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="device">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="m:model"/>
        <xs:element ref="m:vendor"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m:version"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="model" type="xs:string"/>
  <xs:element name="version">
    <xs:complexType mixed="true">
      <xs:attribute name="type"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="property">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="m:name"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="name" type="xs:string"/>
  <xs:complexType name="moduleElementBody">
    <xs:sequence>
      <xs:element minOccurs="0" ref="m:comment"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="m:attribute"/>
        <xs:element ref="m:connector"/>
        <xs:element ref="m:parameter"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="display-name"/>
    <xs:attribute name="id" type="xs:ID"/>
    <xs:attribute name="key"/>
    <xs:attribute name="category"/>
    <xs:attribute name="category-id"/>
    <xs:attribute name="class"/>
  </xs:complexType>
  <!-- Defines a custom type. Each value is a pair (xsd:integer, xsd:string). -->
  <xs:element name="def-type">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="m:comment"/>
        <xs:element maxOccurs="unbounded" ref="m:enumeration"/>
      </xs:sequence>
      <xs:attribute name="name" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="enumeration">
    <xs:complexType>
      <xs:attribute name="key" use="required" type="xs:integer"/>
      <xs:attribute name="value" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="def-signal">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="m:comment"/>
        <xs:element maxOccurs="unbounded" ref="m:signal"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="signal">
    <xs:complexType>
      <xs:attribute name="key" use="required" type="xs:integer"/>
      <xs:attribute name="type" use="required"/>
    </xs:complexType>
  </xs:element>
  <!-- definitions -->
  <xs:element name="defs">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="m:def-signal"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m:def-type"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:group name="inlineContent">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="m:code"/>
        <xs:element ref="m:link"/>
        <xs:element ref="m:mail"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:element name="code" type="xs:string"/>
  <xs:element name="link">
    <xs:complexType mixed="true">
      <xs:attribute name="href" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="mail">
    <xs:complexType mixed="true">
      <xs:attribute name="mailto" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:group name="blockContent">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="m:pre"/>
        <xs:element ref="m:list"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:element name="pre">
    <xs:complexType>
      <xs:group ref="m:inlineContent"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="list">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="m:item"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="item">
    <xs:complexType>
      <xs:group ref="m:inlineContent"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="annotation">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m:section"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="section">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="m:title"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:group ref="m:inlineContent"/>
          <xs:group ref="m:blockContent"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="title" type="xs:string"/>
  <!-- The root element -->
  <xs:element name="ModuleDescriptions">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="m:header"/>
        <xs:element minOccurs="0" ref="m:annotation"/>
        <xs:element minOccurs="0" ref="m:defs"/>
        <xs:element ref="m:body"/>
      </xs:sequence>
      <xs:attribute name="version" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="body">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="m:module"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="module" type="m:moduleElementBody"/>
</xs:schema>
